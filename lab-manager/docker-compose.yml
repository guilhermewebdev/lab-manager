version: "3.7"

services: 
    proxy:
        image: nginx
        volumes:
          - ./server/proxy/dev/nginx/:/etc/nginx/
          - ./server/api/static/:/usr/share/nginx/html/api/static/
        restart: always
        environment:
          - NGINX_HOST=172.25.10.30
          - NGINX_PORT=80
        ports:
          - 80:80
          - 443:443
        networks: 
          backend:
            ipv4_address: 172.35.10.40

    client:
        build: ./client/web
        restart: always
        volumes: 
            - ./client/web:/app
        environment: 
            PORT: 80
        command: yarn start
        stdin_open: true
        depends_on: 
            - api
            - proxy
        networks: 
            backend:
                ipv4_address: 172.35.10.30

    api:
        build:
            context: ./server/api
            dockerfile: Dockerfile.dev
        command: bash main.sh
        environment: 
            DB_PASSWORD: password
            DB_USER: protetics
            DB_NAME: database
            DB_HOST: 172.25.20.20
            DB_PORT: 5432
        volumes: 
            - ./server/api:/code
        restart: always
        depends_on: 
            - db
            - proxy
        networks: 
            db:
                ipv4_address: 172.25.20.10
            backend:
                ipv4_address: 172.35.10.10

    db:
        image: postgres:alpine
        restart: always
        environment:
            POSTGRES_PASSWORD: password
            POSTGRES_USER: protetics
            POSTGRES_DB: database
        networks: 
            db:
                ipv4_address: 172.25.20.20

networks:     
    backend:
        driver: bridge
        ipam:
            config: 
                - subnet: 172.35.10.1/16
    db:
        driver: bridge
        ipam:
            config: 
                - subnet: 172.25.20.1/16